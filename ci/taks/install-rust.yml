# defaults for any parameters that aren't specified
parameters:
  toolchain: stable
  components: []
  targets: []

steps:
  # Linux and macOS.
  - script: |
      set -e
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.toolchain}}
    displayName: "Install rust (*nix)"
    condition: not(eq(variables['Agent.OS'], 'Windows_NT'))

  # Windows.
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.toolchain}}
    displayName: "Install rust (windows)"
    condition: eq(variables['Agent.OS'], 'Windows_NT')

  # Install additional components:
  - ${{ each component in parameters.components }}:
    - script: rustup component add ${{ component }}
    - displayName: "Adding commponent ${{ component }}"

  # Install additional targets:
  - ${{ each target in parameters.targets }}:
    - script: rustup target add ${{ target }}
      displayName: "Adding target '${{ target }}'"

  # All platforms.
  - script: |
        rustup -V
        rustup component list --installed
        rustup show
        echo ""
        rustc -Vv
        cargo -V
    displayName: Query rustup, rust and cargo versions

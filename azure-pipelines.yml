trigger:
  branches:
    include: ['*']
  tags:
    include: ['*']

resources:
  repositories:
    - repository: templates
      type: github
      name: xoac/rust-azure-pipelines
      ref: refs/tags/v0.2.0-alpha.1 ## TODO you may want to change it to refs/tags/TAG_NAME.
      endpoint: PipelinesTemplates

stages: 
- stage: check
  displayName: "Quick checks"
  jobs:
  - template: ci/scenarios/check.yml@templates

- stage: test
  displayName: "Multi OS native tests"
  jobs:
  - template: ci/scenarios/test.yml@templates
    parameters:
      min_rust_supported: 1.31

# This stage allow to easy test your crate using cross project. 
- stage: embedded
  displayName: "Cross check and tests"
  dependsOn:
    - check
  jobs:
  - template: ci/scenarios/embeeded.yml@templates
    parameters:
      checks:
        - target: mips-unknown-linux-musl
          name: cross_chcek_i686_unknown_freebsd 
        - target: aarch64-unknown-linux-gnu
          name: cross_check_aarch64_unknown_linux_gnu
      tests:
        - target: i686-unknown-linux-gnu
          name: cross_test_i686_unknown_linux_gnu

# This stage build binarries - you can deploy them in next stage
- stage: build
  displayName: "Builds"
  dependsOn:
    - embedded
    - test 
  jobs:
  - template: ci/scenarios/builds.yml@templates 
    parameters:
      artifactName: target

- stage: deploy
  displayName: "Deploys"
  dependsOn:
    - build
  jobs:
  # Deploy doc
  - template: ci/scenarios/github/deploy-doc.yml@templates
    parameters:
     branch: develop
     job_name: github_deploy_doc
     github:
      user: xoac
      email: sylwesterrapala@outlook.com
      repo: https://github.com/xoac/rust-azure-pipelines/
 
  - job: deploy_release
    displayName: "Deploy binaries to github"
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: target 
      - bash: |
          MY_TAG="$(Build.SourceBranch)"
          MY_TAG=${MY_TAG#refs/tags/}
          echo $MY_TAG
          echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
          DATE="$(date +%Y-%m-%d)"
          echo "##vso[task.setvariable variable=build.date]$DATE"
        displayName: "Create date and tag variables"

      - task: GitHubRelease@0
        displayName: Create release
        inputs:
            gitHubConnection: PipelinesTemplates
            tagSource: manual
            title: '$(build.my_tag) - $(build.date)'
            tag: '$(build.my_tag)'
            assetUploadMode: replace
            action: edit
            assets: '$(Build.ArtifactStagingDirectory)/*'
            repositoryName: '$(Build.Repository.Name)'
            isPreRelease: true

